<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Account Search</title>
    <style>
        table, th, td { border: 1px solid black; border-collapse: collapse; padding: 8px; }
    </style>
</head>
<body>

<h2>Search Account</h2>
<input type="text" id="searchAccount" placeholder="Enter 14-digit account number">
<button onclick="searchAccount1()">Search</button>

<div id="alertBox" style="color: red; margin-top: 10px;"></div>

<table>
    <thead>
        <tr>
            <th>Account Number</th>
            <th>Active</th>
            <th>App Name</th>
            <th>Created By</th>
            <th>Created Time</th>
            <th>Transfer Number</th>
            <th>Updated By</th>
            <th>Updated Time</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody id="resultBody"></tbody>
</table>

<!-- Template for row -->
<template id="rowTemplate">
    <tr>
        <td class="accountNumber"></td>
        <td><span class="activeValue"></span></td>
        <td class="appName"></td>
        <td class="createdBy"></td>
        <td class="createdTime"></td>
        <td><span class="transferValue"></span></td>
        <td class="updatedBy"></td>
        <td class="updatedTime"></td>
        <td>
            <button class="editButton">Edit</button>
        </td>
    </tr>
</template>

<!-- Link to external JS -->
<script src="script.js"></script>

</body>
</html>





function showFailureAlert(message) {
    document.getElementById("alertBox").textContent = message;
}

function searchAccount1() {
    const acc = document.getElementById("searchAccount").value.trim();
    document.getElementById("alertBox").textContent = ""; // Clear previous alerts

    // Validate: exactly 14 digits
    if (!/^\d{14}$/.test(acc)) {
        showFailureAlert("Enter a valid 14-digit account number (numbers only).");
        return;
    }

    const formData = new URLSearchParams();
    formData.append("accountNumber", acc);

    fetch("search", {
        method: "POST",
        body: formData,
        headers: {
            "Content-Type": "application/x-www-form-urlencoded"
        }
    })
    .then(res => res.json())
    .then(data => {
        const tbody = document.getElementById("resultBody");
        tbody.textContent = ""; // Clear previous rows safely

        if (data && data.accountNumber) {
            const template = document.getElementById("rowTemplate");
            const clone = template.content.cloneNode(true);

            clone.querySelector(".accountNumber").textContent = data.accountNumber;
            clone.querySelector(".activeValue").textContent = data.active;
            clone.querySelector(".appName").textContent = data.appName;
            clone.querySelector(".createdBy").textContent = data.createdBy;
            clone.querySelector(".createdTime").textContent = data.createdTime;
            clone.querySelector(".transferValue").textContent = data.transferNumber;
            clone.querySelector(".updatedBy").textContent = data.updatedBy;
            clone.querySelector(".updatedTime").textContent = data.updatedTime;

            const button = clone.querySelector(".editButton");
            button.addEventListener("click", () => {
                enableEdit(data.transferNumber, data.accountNumber, data.active);
            });

            tbody.appendChild(clone);
        } else {
            showFailureAlert(data.msg || "Account not found.");
        }
    })
    .catch(error => {
        console.error("Error:", error);
        showFailureAlert("An error occurred while searching the account.");
    });
}

// Dummy function for demo
function enableEdit(transferNumber, accountNumber, active) {
    alert(`Editing account ${accountNumber} with transfer ${transferNumber} (active: ${active})`);
}
